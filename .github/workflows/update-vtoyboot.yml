name: Update vtoyboot Releases

on:
  schedule:
    - cron: '0 0 */15 * *'  # Runs at midnight UTC every 15 days
  workflow_dispatch:         # Manual trigger via GitHub UI

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # Required for force-pushing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0      # Required for full git history/tagging

      - name: Fetch all vtoyboot releases
        id: fetch-releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Use GitHub CLI to list releases (authenticated via GITHUB_TOKEN)
          gh api "repos/ventoy/vtoyboot/releases" \
            --paginate \
            --jq '.[] | {tag_name: .tag_name, assets: .assets[].browser_download_url}' \
            > ../releases.json

      - name: Process releases and update repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Process each release from JSON
          tac ../releases.json | while read release; do
            find . -maxdepth 1 ! -name '.git' ! -name '.github' ! -name '.' -exec rm -rf {} +
            tag_name=$(jq -r '.tag_name' <<< "$release")
            iso_url=$(jq -r '.assets | select(contains("vtoyboot-") and (endswith(".iso") or endswith(".tar.gz")))' <<< "$release")

            if [ -z "$iso_url" ]; then
              echo "⚠️ Skipping $tag_name (no ISO asset)"
              continue
            fi

            # if git rev-parse "refs/tags/$tag_name" &>/dev/null; then
            #   echo "✅ $tag_name already processed"
            #   continue
            # fi

            echo "🚀 Processing $tag_name: $iso_url"

            # Download and extract ISO
            if [[ $iso_url == *.iso ]]
            then
              wget -q "$iso_url" -O vtoyboot.iso
              sudo apt-get install -y p7zip-full
              7z x vtoyboot.iso -y
            else
              wget -q "$iso_url" -O vtoyboot.tar.gz
            fi
            
            tar xf vtoyboot*.tar.gz
            rm -f vtoyboot.iso vtoyboot*.tar.gz
            mv vtoyboot-*/* .
            rmdir vtoyboot-*
            
            # Prepend vtoyboot link to README.md
            echo -e "Unpacked files of [vtoyboot](https://github.com/ventoy/vtoyboot).\n\n$(cat README.md 2>/dev/null)" > README.md

            # Commit changes
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "Update to vtoyboot $tag_name"

            # Tag release
            git tag -f -a "$tag_name" -m "vtoyboot $tag_name"

            # Release
            wget -q "$iso_url"
            if [[ $iso_url == *.iso ]]
            then
              filelist=*.iso
            else
              filelist=*.tar.gz
            fi
            gh release create "$tag_name" -t "$tag_name" $filelist
          done

      - name: Force push updates and tags
        run: |
          git push --force origin HEAD:${{ github.ref_name }}
          git push --force origin --tags
